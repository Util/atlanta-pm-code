.\" Automatically generated by Pod::Man 2.12 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Template::Library::Splash 3"
.TH Template::Library::Splash 3 "2007-04-27" "perl v5.8.8" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Template::Library::Splash \- Template library for building stylish HTML user interfaces
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fB\s-1NOTE:\s0\fR This documentation is incomplete, incorrect and outdated.
The Splash! library is still evolving and subject to change.  See
the examples for a much more recent and accurate demonstration of
use.
.Sh "Introduction"
.IX Subsection "Introduction"
The 'Splash' template library is distributed as part of the Template
Toolkit.  It can be found in the 'templates' sub-directory of the
installation directory.
.PP
.Vb 10
\&    /your/tt2/installation
\&    |
\&    +\-\- docs
\&    |      ...
\&    |  
\&    +\-\- images
\&    |      ...
\&    |
\&    +\-\- examples
\&    |      ...
\&    |
\&    +\-\- templates
\&        |
\&        +\-\- html
\&        |      ...
\&        +\-\- pod
\&        |      ...
\&        +\-\- splash     <<<< YOU ARE HERE
\&               ...
.Ve
.PP
To use the Splash library, you first need to tell the Template Toolkit
where to find the template files.
.PP
.Vb 1
\&    use Template;
\&
\&    my $tt2 = Template\->new({
\&        INCLUDE_PATH => '/usr/local/tt2/templates',
\&    });
.Ve
.PP
For a portable way to determine the installation 'templates' directory,
you can use the \f(CW\*(C`Template::Config\->instdir()\*(C'\fR class method.
.PP
.Vb 1
\&    use Template;
\&
\&    my $tt2 = Template\->new({
\&        INCLUDE_PATH => Template::Config\->instdir('templates'),
\&    });
.Ve
.PP
Note that you should set the \s-1INCLUDE_PATH\s0 to the 'templates' directory
as shown here and don't be tempted to set the \s-1INCLUDE_PATH\s0 to
\&'templates/splash'.  Many of the Splash! components use elements in
the 'html' directory and contain directives of the form:
.PP
.Vb 1
\&    [% INCLUDE html/something %].
.Ve
.Sh "Configuration"
.IX Subsection "Configuration"
The 'splash/config' template defines a 'splash' hash array which
contains numerous configuration items for the Splash library.  You
must \s-1PROCESS\s0 this template to ensure that the hash definition is
imported into your calling template.  An \s-1INCLUDE\s0 is not sufficient as
it localises variables and prevents the 'splash' hash array from
existing outside the splash/config template.
.PP
.Vb 1
\&    [% PROCESS splash/config %]
.Ve
.PP
Alternately, you can define the splash/config template as a \s-1PRE_PROCESS\s0
item when you create the Template processor.
.PP
.Vb 1
\&    use Template;
\&
\&    my $tt2 = Template\->new({
\&        INCLUDE_PATH => Template::Config\->instdir('templates'),
\&        PRE_PROCESS  => 'splash/config',
\&    });
.Ve
.PP
You can modify the default configuration by creating your own
\&\s-1PRE_PROCESS\s0 config file which loads the 'splash/config' and then
tweaks the settings to your own preferences.
.PP
.Vb 5
\&    my $tt2 = Template\->new({
\&        INCLUDE_PATH => [ '/home/abw/tt2/templates',
\&                          Template::Config\->instdir('templates') ],
\&        PRE_PROCESS => 'config'
\&    });
.Ve
.PP
/home/abw/tt2/templates/config:
.PP
.Vb 2
\&    [% # load the 'splash' configuration
\&       PROCESS splash/config;
\&       
\&       # tweak values to personal preferences
\&       splash.images       = '/~abw/tt2/images/splash'
\&       splash.select.col   = 'leaf'
\&       splash.unselect.col = 'bud'
\&    %]
.Ve
.PP
The splash/config file includes some instructional comments on 
things you might like to tweak.
.Sh "Colours"
.IX Subsection "Colours"
The Splash! library uses the colours defined in the html/rgb template.
The 'rgb' hash defined therein is imported as the 'splash.rgb' hash.
.PP
.Vb 1
\&    [% INCLUDE splash/box col='grey75' %]
.Ve
.PP
See the examples for further enlightenment on using colour.
.Sh "Style"
.IX Subsection "Style"
There are two very primitive \*(L"styles\*(R" implemented called \*(L"select\*(R" and
\&\*(L"unselect\*(R".  These are used to indicate which item on a menu is
selected, for example.  Each style defines characteristics like
background colour, font face, size and colour, text alignment, and so
on.
.PP
The styles are implemented as hashes within the 'splash' hash.  Many
of the components respond to a 'style' variable being set and you can
pass a direct reference to splash.select or splash.unselect (or your
own styles).  e.g.
.PP
.Vb 8
\&    [% INCLUDE splash/button 
\&           content = "Unselected"
\&           style   = splash.unselect
\&    %]
\&    [% INCLUDE splash/button 
\&           content ="Selected"
\&           style   = splash.select
\&    %]
.Ve
.PP
Alternately, you can use the 'select' variable to indicate either
of the inbuilt styles: splash.select or splash.unselect.
.PP
.Vb 8
\&    [% INCLUDE splash/button 
\&           content = "Unselected"
\&           select  = 0
\&    %]
\&    [% INCLUDE splash/button
\&           content = "Selected"
\&           select  = 1
\&    %]
.Ve
.SH "COMPONENT TEMPLATES"
.IX Header "COMPONENT TEMPLATES"
This section describes some of the component templates in the Splash!
library.  This documentation is incomplete and may also be inaccurate
in places.  The examples in the 'examples' directory are likely to be
a much better reference.
.Sh "splash/text"
.IX Subsection "splash/text"
Simple template to format text according to a selected/unselected style,
adding links, etc.
.PP
.Vb 6
\&    [% INCLUDE splash/text
\&           content = 'Template Toolkit'
\&           link    = 'http://www.template\-toolkit.org'
\&           select  = 0
\&           bold    = 1
\&    %]
.Ve
.PP
Configuration items:
.IP "content" 4
.IX Item "content"
Text content.
.IP "link" 4
.IX Item "link"
\&\s-1URL\s0 which can be defined to make the text a link.
.IP "style" 4
.IX Item "style"
Reference to a style hash.
.IP "select" 4
.IX Item "select"
Flag to default the style to splash.select (select == true value) or
splash.unselect (select == false value).
.PP
The following items default to the relevant style values:
.IP "col (style.col.text)" 4
.IX Item "col (style.col.text)"
.PD 0
.IP "font (style.font.face)" 4
.IX Item "font (style.font.face)"
.IP "bold (style.font.bold)" 4
.IX Item "bold (style.font.bold)"
.IP "size (style.font.size)" 4
.IX Item "size (style.font.size)"
.PD
.Sh "splash/table"
.IX Subsection "splash/table"
A thin wrapper around html/table, allowing a colour to be specified
by name.
.PP
.Vb 10
\&    [% WRAPPER splash/table
\&           col   = 'aqua'
\&           pad   = 4
\&           width = '100%'
\&    %]
\&    <tr>
\&      <td>Foo</td>
\&      <td>Bar</td>
\&    </tr>
\&    [% END %]
.Ve
.PP
Configuration items:
.IP "content" 4
.IX Item "content"
Table content.
.IP "col" 4
.IX Item "col"
Background colour.
.IP "border" 4
.IX Item "border"
Border width (default: 0)
.IP "width" 4
.IX Item "width"
Width in absolute pixels (e.g. '100') or as a percentage (e.g. '50%').
.IP "pad" 4
.IX Item "pad"
Cell padding.
.IP "space" 4
.IX Item "space"
Cell padding.
.Sh "splash/row"
.IX Subsection "splash/row"
Creates a row for an \s-1HTML\s0 table.
.PP
.Vb 1
\&    [% WRAPPER splash/table %]
\&
\&       [% WRAPPER splash/row col='marine' %]
\&       <td>Foo</td><td>Bar</td>
\&       [% END %]
\&
\&       [% WRAPPER splash/row col='aqua' %]
\&       <td>Foo</td><td>Bar</td>
\&       [% END %]
\&
\&    [% END %]
.Ve
.PP
Configuration items:
.IP "content" 4
.IX Item "content"
Row content.
.IP "col" 4
.IX Item "col"
Background colour.
.IP "valign" 4
.IX Item "valign"
Vertical alignment
.IP "rowspan" 4
.IX Item "rowspan"
Number of rows to span.
.Sh "splash/cell"
.IX Subsection "splash/cell"
Creates a cell for an \s-1HTML\s0 table.
.PP
.Vb 3
\&    [% WRAPPER splash/table + splash/row + splash/cell col='grey75' %]
\&        Hello World
\&    [% END %]
.Ve
.PP
Configuration items:
.IP "content" 4
.IX Item "content"
Cell content.
.IP "col" 4
.IX Item "col"
Background colour.
.IP "align" 4
.IX Item "align"
Horizontal alignment
.IP "colspan" 4
.IX Item "colspan"
Number of columns to span.
.Sh "splash/box"
.IX Subsection "splash/box"
A box created from a union of splash/table, splash/row and splash/cell.
The following is equivalent to the previous example.
.PP
.Vb 3
\&    [% WRAPPER splash/box col='grey75' %]
\&        Hello World
\&    [% END %]
.Ve
.PP
Configuration items are as per the individual templates.
.Sh "splash/button"
.IX Subsection "splash/button"
Creates a small button with rounded corners.
.PP
.Vb 5
\&    [% INCLUDE splash/button
\&           content = 'Template Toolkit'
\&           select  = 1
\&           width   = '50%'
\&    %]
.Ve
.PP
Configuration items:
.IP "content" 4
.IX Item "content"
Button content.
.IP "style" 4
.IX Item "style"
Reference to a style hash.
.IP "select" 4
.IX Item "select"
Flag to default the style to splash.select (select == true value) or
splash.unselect (select == false value).
.IP "width" 4
.IX Item "width"
Width in absolute pixels (e.g. '100') or as a percentage (e.g. '50%').
.PP
The following items default to the relevant style values:
.IP "col (style.col.text)" 4
.IX Item "col (style.col.text)"
.PD 0
.IP "textcol (style.col.text)" 4
.IX Item "textcol (style.col.text)"
.IP "font (style.font.face)" 4
.IX Item "font (style.font.face)"
.IP "size (style.font.size)" 4
.IX Item "size (style.font.size)"
.IP "bold (style.font.bold)" 4
.IX Item "bold (style.font.bold)"
.IP "width (style.button.width)" 4
.IX Item "width (style.button.width)"
.IP "align (style.button.align)" 4
.IX Item "align (style.button.align)"
.PD
.Sh "splash/bar"
.IX Subsection "splash/bar"
Creates a bar with rounded corners at either the top or bottom, and 
square corners on the other.  Default has rounded at the top, set
\&'invert' to select bottom.
.PP
.Vb 4
\&    [% INCLUDE splash/bar
\&           content = 'Hello World',
\&           select  = 1
\&    %]
.Ve
.PP
Configuration items:
.IP "content" 4
.IX Item "content"
Bar content.
.IP "style" 4
.IX Item "style"
Reference to a style hash.
.IP "select" 4
.IX Item "select"
Flag to default the style to splash.select (select == true value) or
splash.unselect (select == false value).
.IP "width" 4
.IX Item "width"
Width in absolute pixels (e.g. '100') or as a percentage (e.g. '50%').
.IP "invert" 4
.IX Item "invert"
Flag to invert bar to hang down instead of sitting
upright.
.PP
The following items default to the relevant style values:
.IP "col (style.col.text)" 4
.IX Item "col (style.col.text)"
.PD 0
.IP "textcol (style.col.text)" 4
.IX Item "textcol (style.col.text)"
.IP "font (style.font.face)" 4
.IX Item "font (style.font.face)"
.IP "size (style.font.size)" 4
.IX Item "size (style.font.size)"
.IP "bold (style.font.bold)" 4
.IX Item "bold (style.font.bold)"
.IP "width (style.button.width)" 4
.IX Item "width (style.button.width)"
.IP "align (style.button.align)" 4
.IX Item "align (style.button.align)"
.PD
.Sh "splash/hair"
.IX Subsection "splash/hair"
Generates a frame enclosing the content within crosshair corners.
.PP
.Vb 3
\&    [% INCLUDE splash/hair
\&           content = 'Template Toolkit'
\&    %]
.Ve
.PP
Configuration items:
.IP "content" 4
.IX Item "content"
Hair content.
.IP "style" 4
.IX Item "style"
Reference to a style hash.
.PP
The following items default to the relevant style values:
.IP "col (style.col.text)" 4
.IX Item "col (style.col.text)"
.PD 0
.IP "bgcol (style.col.back)" 4
.IX Item "bgcol (style.col.back)"
.IP "align (style.button.align)" 4
.IX Item "align (style.button.align)"
.PD
.Sh "splash/menu"
.IX Subsection "splash/menu"
Creates a menu as a series of splash/button elements.
.PP
.Vb 5
\&    [% buttons = [ 
\&          { text => 'One', link => 'one.html' }
\&          { text => 'Two', link => 'two.html' }
\&       ]
\&    %]
\&
\&    [% INCLUDE splash/menu
\&           select = 2           # Two
\&    %]
.Ve
.PP
Configuration items:
.IP "buttons" 4
.IX Item "buttons"
A reference to a list of hash arrays containing 'text' and 'link' items.
.IP "select (n or 0)" 4
.IX Item "select (n or 0)"
Indicates which button should be selected.  First item is 1.  0 indicates
no button selected.
.IP "width" 4
.IX Item "width"
Width in absolute pixels (e.g. '100') or as a percentage (e.g. '50%').
.IP "align" 4
.IX Item "align"
Horizontal alignment
.Sh "splash/menubar"
.IX Subsection "splash/menubar"
As above, but incorporated into a wider bar.
.PP
.Vb 3
\&    [% WRAPPER splash/menubar %]
\&       Section Title
\&    [% END %]
.Ve
.PP
Configuration items:
.IP "buttons" 4
.IX Item "buttons"
A reference to a list of hash arrays containing 'text' and 'link' items.
.IP "select (n or 0)" 4
.IX Item "select (n or 0)"
Indicates which button should be selected.  First item is 1.  0 indicates
no button selected.
.IP "width" 4
.IX Item "width"
Width in absolute pixels (e.g. '100') or as a percentage (e.g. '50%').
.IP "align" 4
.IX Item "align"
Horizontal alignment
.Sh "splash/panel"
.IX Subsection "splash/panel"
A table with a coloured edge.
.PP
.Vb 5
\&    [% WRAPPER splash/panel edge='black' fill='grey75' border=2 %]
\&       <tr>
\&         <td>Hello World</td>
\&       </tr>
\&    [% END %]
.Ve
.PP
Configuration items:
.IP "content" 4
.IX Item "content"
Panel content.
.IP "style" 4
.IX Item "style"
Reference to a style hash.
.IP "select" 4
.IX Item "select"
Flag to default the style to splash.select (select == true value) or
splash.unselect (select == false value).
.IP "width" 4
.IX Item "width"
Width in absolute pixels (e.g. '100') or as a percentage (e.g. '50%').
.IP "align" 4
.IX Item "align"
Horizontal alignment
.IP "border" 4
.IX Item "border"
Border width (default: 0)
.PP
The following items default to the relevant style values:
.IP "edge (style.col.edge)" 4
.IX Item "edge (style.col.edge)"
.PD 0
.IP "fill (style.col.fill)" 4
.IX Item "fill (style.col.fill)"
.IP "pad (style.pad)" 4
.IX Item "pad (style.pad)"
.PD
.Sh "splash/pane"
.IX Subsection "splash/pane"
A union of splash/row + splash/cell.
.PP
.Vb 4
\&    [% WRAPPER splash/panel select=1 %]
\&       [% WRAPPER splash/pane col='grey75' %]
\&          Hello World
\&       [% END %]
\&
\&       [% WRAPPER splash/pane col='grey50' %]
\&          Hello Again
\&       [% END %]
\&    [% END %]
.Ve
.Sh "splash/tab"
.IX Subsection "splash/tab"
A simple button looking like a page tab.
.PP
.Vb 4
\&    [% INCLUDE splash/tab
\&           content = 'Option 1'
\&           col = 'aqua'
\&    %]
.Ve
.PP
Configuration items:
.IP "content" 4
.IX Item "content"
Tab content.
.IP "style" 4
.IX Item "style"
Reference to a style hash.
.IP "select" 4
.IX Item "select"
Flag to default the style to splash.select (select == true value) or
splash.unselect (select == false value).
.IP "width" 4
.IX Item "width"
Width in absolute pixels (e.g. '100') or as a percentage (e.g. '50%').
.IP "align" 4
.IX Item "align"
Horizontal alignment
.PP
The following items default to the relevant style values:
.IP "col (style.col.text)" 4
.IX Item "col (style.col.text)"
.PD 0
.IP "textcol (style.col.text)" 4
.IX Item "textcol (style.col.text)"
.IP "font (style.font.face)" 4
.IX Item "font (style.font.face)"
.IP "size (style.font.size)" 4
.IX Item "size (style.font.size)"
.IP "bold (style.font.bold)" 4
.IX Item "bold (style.font.bold)"
.IP "tabalign (style.tab.align)" 4
.IX Item "tabalign (style.tab.align)"
.PD
.Sh "splash/tabset"
.IX Subsection "splash/tabset"
A set of splash/tab components, similar to a menu.
.PP
Configuration items:
.IP "tabs" 4
.IX Item "tabs"
List of hash references containing text/link entries, as per 
menu buttons.
.IP "select" 4
.IX Item "select"
Flag to default the style to splash.select (select == true value) or
splash.unselect (select == false value).
.IP "invert" 4
.IX Item "invert"
Flag to invert tab to hang down instead of sitting
upright.
.Sh "splash/tabbox"
.IX Subsection "splash/tabbox"
Add a splash/tab to the top of a splash/box.
.PP
Configuration items:
.IP "title" 4
.IX Item "title"
.Vb 1
\& title.
.Ve
.IP "content" 4
.IX Item "content"
.Vb 1
\& content.
.Ve
.IP "width" 4
.IX Item "width"
Width in absolute pixels (e.g. '100') or as a percentage (e.g. '50%').
.IP "tabwidth" 4
.IX Item "tabwidth"
Width of tabs.
.IP "select" 4
.IX Item "select"
Flag to default the style to splash.select (select == true value) or
splash.unselect (select == false value).
.IP "border" 4
.IX Item "border"
Border width (default: 0)
.PP
The following items default to the relevant style values:
.IP "col (style.col.text)" 4
.IX Item "col (style.col.text)"
.PD 0
.IP "fill (style.col.fill)" 4
.IX Item "fill (style.col.fill)"
.IP "tabalign (style.tab.align)" 4
.IX Item "tabalign (style.tab.align)"
.IP "tablocate (style.tab.locate)" 4
.IX Item "tablocate (style.tab.locate)"
.PD
.Sh "splash/tabsbox"
.IX Subsection "splash/tabsbox"
Add a splash/tabset to the top of a splash/box.
.PP
Configuration items:
.IP "tabs" 4
.IX Item "tabs"
List of hash references containing text/link entries, as per 
menu buttons.
.IP "select" 4
.IX Item "select"
Flag to default the style to splash.select (select == true value) or
splash.unselect (select == false value).
.IP "content" 4
.IX Item "content"
.Vb 1
\& content.
.Ve
.IP "width" 4
.IX Item "width"
Width in absolute pixels (e.g. '100') or as a percentage (e.g. '50%').
.IP "border" 4
.IX Item "border"
Border width (default: 0)
.IP "invert" 4
.IX Item "invert"
Flag to invert  to hang down instead of sitting
upright.
.PP
The following items default to the relevant style values:
.IP "col (style.col.text)" 4
.IX Item "col (style.col.text)"
.PD 0
.IP "fill (style.col.fill)" 4
.IX Item "fill (style.col.fill)"
.IP "tabalign (style.tab.align)" 4
.IX Item "tabalign (style.tab.align)"
.IP "tablocate (style.tab.locate)" 4
.IX Item "tablocate (style.tab.locate)"
.PD
.Sh "splash/tabspanel"
.IX Subsection "splash/tabspanel"
As per splash/tabsbox, but attached to a splash/panel instead of a
splash/box.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
See the examples in the 'examples' sub-directory of the installation 
for comprehensive examples showing use of the Splash! library.
.SH "AUTHOR"
.IX Header "AUTHOR"
Andy Wardley <abw@wardley.org>
.PP
<http://wardley.org/|http://wardley.org/>
.SH "VERSION"
.IX Header "VERSION"
2.68, distributed as part of the
Template Toolkit version 2.19, released on 27 April 2007.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
.Vb 1
\&  Copyright (C) 1996\-2007 Andy Wardley.  All Rights Reserved.
.Ve
.PP
This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Template::Library::HTML
