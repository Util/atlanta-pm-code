.\" Automatically generated by Pod::Man 2.12 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Template::Plugin::Autoformat 3"
.TH Template::Plugin::Autoformat 3 "2007-04-27" "perl v5.8.8" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Template::Plugin::Autoformat \- Interface to Text::Autoformat module
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    [% USE autoformat(options) %]
\&
\&    [% autoformat(text, more_text, ..., options) %]
\&
\&    [% FILTER autoformat(options) %]
\&       a block of text
\&    [% END %]
.Ve
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 5
\&    # define some text for the examples
\&    [% text = BLOCK %]
\&       Be not afeard.  The isle is full of noises, sounds and sweet 
\&       airs that give delight but hurt not.
\&    [% END %]
\&
\&    # pass options to constructor...
\&    [% USE autoformat(case => 'upper') %]
\&    [% autoformat(text) %]
\&
\&    # and/or pass options to the autoformat subroutine itself
\&    [% USE autoformat %]
\&    [% autoformat(text, case => 'upper') %]
\&    
\&    # using the autoformat filter
\&    [% USE autoformat(left => 10, right => 30) %]
\&    [% FILTER autoformat %]
\&       Be not afeard.  The isle is full of noises, sounds and sweet 
\&       airs that give delight but hurt not.
\&    [% END %]
\&
\&    # another filter example with configuration options
\&    [% USE autoformat %]
\&    [% FILTER autoformat(left => 20) %]
\&       Be not afeard.  The isle is full of noises, sounds and sweet 
\&       airs that give delight but hurt not.
\&    [% END %]
\&    
\&    # another FILTER example, defining a 'poetry' filter alias
\&    [% USE autoformat %]
\&    [% text FILTER poetry = autoformat(left => 20, right => 40) %]
\&
\&    # reuse the 'poetry' filter alias
\&    [% text FILTER poetry %]
\&
\&    # shorthand form ('|' is an alias for 'FILTER')
\&    [% text | autoformat %]
\&
\&    # using forms
\&    [% USE autoformat(form => '>>>>.<<<', numeric => 'AllPlaces') %]
\&    [% autoformat(10, 20.32, 11.35) %]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The autoformat plugin is an interface to Damian Conway's Text::Autoformat 
Perl module which provides advanced text wrapping and formatting.
.PP
Configuration options may be passed to the plugin constructor via the 
\&\s-1USE\s0 directive.
.PP
.Vb 1
\&    [% USE autoformat(right => 30) %]
.Ve
.PP
The autoformat subroutine can then be called, passing in text items which 
will be wrapped and formatted according to the current configuration.
.PP
.Vb 1
\&    [% autoformat('The cat sat on the mat') %]
.Ve
.PP
Additional configuration items can be passed to the autoformat subroutine
and will be merged with any existing configuration specified via the 
constructor.
.PP
.Vb 1
\&    [% autoformat(text, left => 20) %]
.Ve
.PP
Configuration options are passed directly to the Text::Autoformat plugin.
At the time of writing, the basic configuration items are:
.PP
.Vb 7
\&    left        left margin (default: 1)
\&    right       right margin (default 72)
\&    justify     justification as one of 'left', 'right', 'full'
\&                or 'centre' (default: left)
\&    case        case conversion as one of 'lower', 'upper',
\&                'sentence', 'title', or 'highlight' (default: none)
\&    squeeze     squeeze whitespace (default: enabled)
.Ve
.PP
The plugin also accepts a 'form' item which can be used to define a 
format string.  When a form is defined, the plugin will call the 
underlying \fIform()\fR subroutine in preference to \fIautoformat()\fR.
.PP
.Vb 2
\&    [% USE autoformat(form => '>>>>.<<') %]
\&    [% autoformat(123.45, 666, 3.14) %]
.Ve
.PP
Additional configuration items relevant to forms can also be specified.
.PP
.Vb 2
\&    [% USE autoformat(form => '>>>>.<<', numeric => 'AllPlaces') %]
\&    [% autoformat(123.45, 666, 3.14) %]
.Ve
.PP
These can also be passed directly to the autoformat subroutine.
.PP
.Vb 5
\&    [% USE autoformat %]
\&    [% autoformat( 123.45, 666, 3.14,
\&                   form    => '>>>>.<<', 
\&                   numeric => 'AllPlaces' )
\&    %]
.Ve
.PP
See Text::Autoformat for further details.
.SH "AUTHORS"
.IX Header "AUTHORS"
Robert McArthur <mcarthur@dstc.edu.au> wrote the original plugin 
code, with some modifications and additions from Andy Wardley 
<abw@wardley.org>.
.PP
Damian Conway <damian@conway.org> wrote the Text::Autoformat 
module (in his copious spare time :\-) which does all the clever stuff.
.SH "VERSION"
.IX Header "VERSION"
Template Toolkit version 2.19, released on 27 April 2007.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2000 Robert McArthur & Andy Wardley.  All Rights Reserved.
.PP
This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Template::Plugin, Text::Autoformat
